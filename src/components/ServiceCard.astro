---
interface Props {
  color: 'blue' | 'purple' | 'teal';
  icon: string;
  title: string;
  description: string;
  features: string[];
}

const { color, icon, title, description, features } = Astro.props;

const colors = {
  blue: {
    accent: 'border-blue-400',
    hover: 'hover:border-blue-500',
    icon: 'text-blue-500',
    iconBg: 'bg-blue-50',
    shadow: 'hover:shadow-blue-100',
    gradient: 'from-blue-500 to-cyan-500'
  },
  purple: {
    accent: 'border-purple-400',
    hover: 'hover:border-purple-500',
    icon: 'text-purple-500',
    iconBg: 'bg-purple-50',
    shadow: 'hover:shadow-purple-100',
    gradient: 'from-purple-500 to-pink-500'
  },
  teal: {
    accent: 'border-teal-400',
    hover: 'hover:border-teal-500',
    icon: 'text-teal-500',
    iconBg: 'bg-teal-50',
    shadow: 'hover:shadow-teal-100',
    gradient: 'from-teal-500 to-emerald-500'
  }
};
---

<div class="group relative">
  <div class={`
    bg-white p-6 rounded-lg border border-gray-100 
    ${colors[color].hover} 
    transition-all duration-500 ease-out
    hover:shadow-lg ${colors[color].shadow}
    hover:-translate-y-1
  `}>
    <!-- Icon with hover animation -->
    <div class={`
      w-12 h-12 ${colors[color].iconBg} rounded-lg 
      flex items-center justify-center mb-6
      transform transition-transform duration-300 ease-out
      group-hover:scale-110 group-hover:rotate-3
    `}>
      <div class={`${colors[color].icon} transition-transform duration-300`}>
        <Fragment set:html={icon} />
      </div>
    </div>

    <!-- Content -->
    <div>
      <h3 class="text-xl font-medium text-gray-900 mb-3 transition-colors duration-300 group-hover:text-gray-800">
        {title}
      </h3>
      <p class="text-gray-600 text-sm mb-6 transition-colors duration-300 group-hover:text-gray-700">
        {description}
      </p>
      
      <!-- Features with stagger effect -->
      <ul class="space-y-2">
        {features.map((feature, index) => (
          <li 
            class="flex items-center text-sm text-gray-600 transition-all duration-300 hover:translate-x-1"
            style={`transition-delay: ${index * 50}ms`}
          >
            <span class={`
              mr-2 ${colors[color].icon}
              transform transition-transform duration-300
              group-hover:scale-110
            `}>
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
              </svg>
            </span>
            {feature}
          </li>
        ))}
      </ul>

      <!-- CTA Link with hover effect -->
      <div class="mt-6 transition-transform duration-300 ease-out transform">
        <a
          href="/kontakt"
          class={`
            inline-flex items-center text-sm ${colors[color].icon}
            transition-all duration-300
            hover:opacity-80
            relative
            after:absolute after:bottom-0 after:left-0 after:w-0 after:h-px
            after:bg-current after:transition-all after:duration-300
            hover:after:w-full
            group
          `}
        >
          Dowiedz się więcej
          <svg 
            class="w-4 h-4 ml-1 transition-transform duration-300 group-hover:translate-x-2" 
            fill="none" 
            viewBox="0 0 24 24" 
            stroke="currentColor"
          >
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3" />
          </svg>
        </a>
      </div>
    </div>
  </div>
</div> 